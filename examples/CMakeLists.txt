add_executable(simpliest simpliest.c)
set_target_properties(simpliest PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
target_link_libraries(simpliest PRIVATE nuklear ${NKUI_PLAT_DEPS})
target_include_directories(simpliest PRIVATE ${NKUI_INCLUDE_DIR})
target_compile_definitions(simpliest PRIVATE NKUI_BACKEND=NKUI_NATIVE)

add_library(samples-common STATIC common.h common.c)
if(NKUI_BUILD_STATIC)
    target_link_libraries(samples-common PUBLIC nkui)
else()
    target_compile_definitions(samples-common PRIVATE NK_IMPLEMENTATION)
    target_include_directories(samples-common PUBLIC ${NKUI_INCLUDE_DIR})
    target_compile_definitions(samples-common PUBLIC NKUI_BACKEND=NKUI_NATIVE)
    target_link_libraries(samples-common PUBLIC ${NKUI_PLAT_DEPS})
endif()

add_executable(simple simple.c)
target_link_libraries(simple samples-common)
set_target_properties(simple PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")

add_executable(alldemos alldemos.c overview.c calculator.c node_editor.c canvas.c file_browser.c)
target_link_libraries(alldemos samples-common)
set_target_properties(alldemos PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
